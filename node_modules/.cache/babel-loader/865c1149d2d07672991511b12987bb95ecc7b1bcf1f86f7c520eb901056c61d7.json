{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nfunction RSVP() {\n  _s();\n  // ... other state variables ...\n  const [guestData, setGuestData] = useState({}); // State to store guest data\n\n  useEffect(() => {\n    const fetchGuestData = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/guestData'); // Fetch from your server\n        if (response.ok) {\n          const data = await response.json();\n          setGuestData(data);\n        } else {\n          console.error('Error fetching guest data');\n          // Handle error (e.g., display an error message)\n        }\n      } catch (error) {\n        console.error('Error fetching guest data:', error);\n        // Handle error\n      }\n    };\n    fetchGuestData();\n  }, []); // Empty dependency array ensures this runs only once when the component mounts\n\n  // ... rest of your component code (handleSubmit, handleRSVP, etc.) ...\n}\n_s(RSVP, \"r4wiRHC/H+CyLMOF6+NmkHdJMG0=\");\n_c = RSVP;\nexport default RSVP;\nvar _c;\n$RefreshReg$(_c, \"RSVP\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","RSVP","_s","guestData","setGuestData","fetchGuestData","response","fetch","ok","data","json","console","error","_c","$RefreshReg$"],"sources":["/Users/brenna.sorkin/Documents/my-wedding-rsvp/src/RSVP.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; \n\nfunction RSVP() {\n  // ... other state variables ...\n  const [guestData, setGuestData] = useState({}); // State to store guest data\n\n  useEffect(() => {\n    const fetchGuestData = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/guestData'); // Fetch from your server\n        if (response.ok) {\n          const data = await response.json();\n          setGuestData(data);\n        } else {\n          console.error('Error fetching guest data');\n          // Handle error (e.g., display an error message)\n        }\n      } catch (error) {\n        console.error('Error fetching guest data:', error);\n        // Handle error\n      }\n    };\n\n    fetchGuestData(); \n  }, []); // Empty dependency array ensures this runs only once when the component mounts\n\n  // ... rest of your component code (handleSubmit, handleRSVP, etc.) ...\n}\n\nexport default RSVP;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAE9C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC,CAAC,CAAC;QACjE,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCN,YAAY,CAACK,IAAI,CAAC;QACpB,CAAC,MAAM;UACLE,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;UAC1C;QACF;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD;MACF;IACF,CAAC;IAEDP,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;AACF;AAACH,EAAA,CAzBQD,IAAI;AAAAY,EAAA,GAAJZ,IAAI;AA2Bb,eAAeA,IAAI;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}