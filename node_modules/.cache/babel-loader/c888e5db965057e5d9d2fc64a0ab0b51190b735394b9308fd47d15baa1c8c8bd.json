{"ast":null,"code":"var _jsxFileName = \"/Users/brenna.sorkin/Documents/GitHub/ryanandbren/src/PartyTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './PartyTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PartyTable = () => {\n  _s();\n  const [partyData, setPartyData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPartyData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5001/partyData\");\n        if (response.ok) {\n          const data = await response.json();\n          setPartyData(data);\n        } else {\n          setError(\"Failed to fetch party data.\");\n        }\n      } catch (error) {\n        setError(\"Error fetching party data.\");\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPartyData();\n  }, []);\n  const downloadCSV = () => {\n    const csvRows = [];\n    const headers = [\"Party Name\", \"Guest Name\", \"RSVP\", \"Allergies\"];\n    csvRows.push(headers.join(\",\"));\n    Object.entries(partyData).forEach(([partyName, details]) => {\n      details.members.forEach(member => {\n        const row = [`\"${partyName}\"`, `\"${member.firstname} ${member.lastname}\"`, `\"${member.rsvp || \"No response\"}\"`, `\"${(member.allergies || \"None\").replace(/\"/g, '\"\"')}\"` // Escape double quotes\n        ];\n        csvRows.push(row.join(\",\"));\n      });\n    });\n    const csvContent = `data:text/csv;charset=utf-8,${csvRows.join(\"\\n\")}`;\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"party_table.csv\");\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"party-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RSVP Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadCSV,\n      className: \"download-csv-button\",\n      children: \"Download Table as CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"party-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Party Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Guest Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"RSVP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Allergies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(partyData).map(([partyName, details]) => details.members.map((member, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: partyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${member.firstname} ${member.lastname}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: member.rsvp || \"No response\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: member.allergies || \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this)]\n        }, `${partyName}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(PartyTable, \"ZY/mt0OVZjmHvTpI4IBmBEtkdu0=\");\n_c = PartyTable;\nexport default PartyTable;\nvar _c;\n$RefreshReg$(_c, \"PartyTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PartyTable","_s","partyData","setPartyData","loading","setLoading","error","setError","fetchPartyData","response","fetch","ok","data","json","console","downloadCSV","csvRows","headers","push","join","Object","entries","forEach","partyName","details","members","member","row","firstname","lastname","rsvp","allergies","replace","csvContent","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click","removeChild","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","index","_c","$RefreshReg$"],"sources":["/Users/brenna.sorkin/Documents/GitHub/ryanandbren/src/PartyTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './PartyTable.css';\n\nconst PartyTable = () => {\n    const [partyData, setPartyData] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchPartyData = async () => {\n            try {\n                const response = await fetch(\"http://localhost:5001/partyData\");\n                if (response.ok) {\n                    const data = await response.json();\n                    setPartyData(data);\n                } else {\n                    setError(\"Failed to fetch party data.\");\n                }\n            } catch (error) {\n                setError(\"Error fetching party data.\");\n                console.error(error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchPartyData();\n    }, []);\n\n    const downloadCSV = () => {\n        const csvRows = [];\n        const headers = [\"Party Name\", \"Guest Name\", \"RSVP\", \"Allergies\"];\n        csvRows.push(headers.join(\",\"));\n\n        Object.entries(partyData).forEach(([partyName, details]) => {\n            details.members.forEach((member) => {\n                const row = [\n                    `\"${partyName}\"`,\n                    `\"${member.firstname} ${member.lastname}\"`,\n                    `\"${member.rsvp || \"No response\"}\"`,\n                    `\"${(member.allergies || \"None\").replace(/\"/g, '\"\"')}\"`, // Escape double quotes\n                ];\n                csvRows.push(row.join(\",\"));\n            });\n        });\n\n        const csvContent = `data:text/csv;charset=utf-8,${csvRows.join(\"\\n\")}`;\n        const encodedUri = encodeURI(csvContent);\n        const link = document.createElement(\"a\");\n        link.setAttribute(\"href\", encodedUri);\n        link.setAttribute(\"download\", \"party_table.csv\");\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>{error}</p>;\n\n    return (\n        <div className=\"party-table-container\">\n            <h1>RSVP Status</h1>\n            <button onClick={downloadCSV} className=\"download-csv-button\">\n                Download Table as CSV\n            </button>\n            <table className=\"party-table\">\n                <thead>\n                    <tr>\n                        <th>Party Name</th>\n                        <th>Guest Name</th>\n                        <th>RSVP</th>\n                        <th>Allergies</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.entries(partyData).map(([partyName, details]) =>\n                        details.members.map((member, index) => (\n                            <tr key={`${partyName}-${index}`}>\n                                <td>{partyName}</td>\n                                <td>{`${member.firstname} ${member.lastname}`}</td>\n                                <td>{member.rsvp || \"No response\"}</td>\n                                <td>{member.allergies || \"None\"}</td>\n                            </tr>\n                        ))\n                    )}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default PartyTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}