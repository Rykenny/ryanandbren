{"ast":null,"code":"var _jsxFileName = \"/Users/brenna.sorkin/Documents/GitHub/ryanandbren/src/RSVP.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport \"./RSVP.css\";\nimport Navbar from './Navbar'; // Import Navbar\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RSVP() {\n  _s();\n  const {\n    partyCode\n  } = useParams();\n  const navigate = useNavigate();\n  const [party, setParty] = useState(null);\n  const [partyFetched, setPartyFetched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [attendingCount, setAttendingCount] = useState(0);\n  const [rsvpSubmitted, setRsvpSubmitted] = useState(false);\n  const [invalidCodeError, setInvalidCodeError] = useState(\"\"); // Error message for invalid code\n\n  const [memberRSVPs, setMemberRSVPs] = useState({});\n  const [memberAllergies, setMemberAllergies] = useState({});\n  const [inputPartyCode, setInputPartyCode] = useState(partyCode || \"\");\n\n  // Reset partyCode to an empty string\n  const resetPartyCode = () => {\n    setInputPartyCode(\"\"); // Clear partyCode when the RSVP link is clicked\n  };\n  const guestImages = ['/guest-ill1.png', '/guest-ill2.png', '/guest-ill3.png', '/guest-ill4.png'];\n  useEffect(() => {\n    if (partyCode) {\n      const fetchPartyData = async () => {\n        try {\n          const response = await fetch(\"http://localhost:5001/partyData\");\n          if (response.ok) {\n            const data = await response.json();\n            const foundPartyKey = Object.keys(data).find(partyCodeKey => partyCodeKey.toLowerCase() === partyCode.toLowerCase());\n            if (foundPartyKey) {\n              const foundParty = data[foundPartyKey];\n              setParty(foundParty);\n              setPartyFetched(true);\n              const initialRSVPs = {};\n              const initialAllergies = {};\n              let rsvpAlreadySubmitted = false;\n              let initialCount = 0;\n              foundParty.members.forEach(member => {\n                const fullName = `${member.firstname} ${member.lastname}`;\n                initialRSVPs[fullName] = member.rsvp ? member.rsvp : null;\n                if (member.rsvp === \"yes\") {\n                  initialCount += 1;\n                  rsvpAlreadySubmitted = true;\n                }\n                initialAllergies[fullName] = member.allergies || \"\";\n              });\n              setAttendingCount(initialCount);\n              if (rsvpAlreadySubmitted) {\n                setRsvpSubmitted(true);\n                setShowSuccess(true);\n                calculateSuccessMessage(initialRSVPs);\n              } else {\n                const allNoRSVPs = Object.values(initialRSVPs).every(rsvp => rsvp === \"no\");\n                if (allNoRSVPs) {\n                  setRsvpSubmitted(true);\n                  setShowSuccess(true);\n                  setSuccessMessage(\"We'll miss you, but hope to see you soon!\");\n                }\n              }\n              setMemberRSVPs(initialRSVPs);\n              setMemberAllergies(initialAllergies);\n            } else {\n              setInvalidCodeError(\"Invalid party code. Check your email for your code, or let Ryan and Brenna know if you're having trouble finding it!\");\n            }\n          } else {\n            console.error(\"Error fetching party data\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching party data:\", error);\n        }\n      };\n      fetchPartyData();\n    }\n  }, [partyCode]);\n\n  // Define the generateGreeting function here\n  const generateGreeting = members => {\n    const firstNames = members.map(member => member.firstname);\n    if (firstNames.length === 1) {\n      return `Dear ${firstNames[0]},`;\n    } else if (firstNames.length === 2) {\n      return `Dear ${firstNames[0]} and ${firstNames[1]},`;\n    } else {\n      const guestList = firstNames.slice(0, -1).join(\", \");\n      const lastGuest = firstNames[firstNames.length - 1];\n      return `Dear ${guestList}, and ${lastGuest},`;\n    }\n  };\n\n  // Handle RSVP status changes\n  const handleRSVPChange = (fullName, newRsvpStatus) => {\n    setShowSuccess(false);\n    setErrorMessage(\"\");\n    setAttendingCount(prevCount => {\n      const isCurrentlyYes = memberRSVPs[fullName] === \"yes\";\n      if (newRsvpStatus === \"yes\" && !isCurrentlyYes) {\n        return prevCount + 1;\n      }\n      if (newRsvpStatus === \"no\" && isCurrentlyYes) {\n        return Math.max(prevCount - 1, 0);\n      }\n      return prevCount;\n    });\n    setMemberRSVPs(prevRSVPs => ({\n      ...prevRSVPs,\n      [fullName]: newRsvpStatus\n    }));\n  };\n\n  // Handle allergy changes\n  const handleAllergyChange = (fullName, newAllergies) => {\n    setShowSuccess(false);\n    setMemberAllergies(prevAllergies => ({\n      ...prevAllergies,\n      [fullName]: newAllergies\n    }));\n  };\n\n  // Handle form submission to submit the RSVP data\n  const handleRSVP = async () => {\n    const allRSVPsSelected = Object.values(memberRSVPs).every(rsvp => rsvp !== null);\n    if (!allRSVPsSelected) {\n      setErrorMessage(\"Please choose an RSVP status for all guests.\");\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5001/rsvp\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          code: partyCode,\n          memberRSVPs,\n          memberAllergies\n        })\n      });\n      if (response.ok) {\n        setShowSuccess(true);\n        setRsvpSubmitted(true);\n        calculateSuccessMessage(memberRSVPs);\n      } else {\n        const data = await response.json();\n        console.error(\"RSVP failed:\", data.error);\n        alert(\"RSVP failed. Please try again later.\");\n      }\n    } catch (error) {\n      console.error(\"Error sending RSVP:\", error);\n      alert(\"An error occurred. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const calculateSuccessMessage = rsvpData => {\n    const attendingGuests = Object.keys(rsvpData).filter(guestName => rsvpData[guestName] === \"yes\");\n    const attendingFirstNames = attendingGuests.map(fullName => {\n      return fullName.split(\" \")[0];\n    });\n    if (attendingFirstNames.length === 0) {\n      setSuccessMessage(\"We'll miss you, but hope to see you soon!\");\n    } else if (attendingFirstNames.length === 1) {\n      setSuccessMessage(`We can't wait to celebrate with you, ${attendingFirstNames[0]}!`);\n    } else {\n      const guestList = attendingFirstNames.slice(0, -1).join(\", \");\n      const lastGuest = attendingFirstNames[attendingFirstNames.length - 1];\n      setSuccessMessage(`We can't wait to celebrate with you, ${guestList} and ${lastGuest}!`);\n    }\n  };\n  const atLeastOneRSVP = Object.values(memberRSVPs).some(rsvp => rsvp !== null);\n\n  // Submit party code and check for validity without navigating\n  const handlePartyCodeSubmit = async event => {\n    event.preventDefault();\n    if (!inputPartyCode) return;\n    try {\n      const response = await fetch(\"http://localhost:5001/partyData\");\n      if (response.ok) {\n        const data = await response.json();\n        const foundPartyKey = Object.keys(data).find(partyCodeKey => partyCodeKey.toLowerCase() === inputPartyCode.toLowerCase());\n        if (foundPartyKey) {\n          navigate(`/rsvp/${inputPartyCode}`); // Navigate if the code is valid\n        } else {\n          setInvalidCodeError(\"Invalid party code. Check your email for your code, or let Ryan and Brenna know if you're having trouble finding it!\");\n        }\n      } else {\n        console.error(\"Error fetching party data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching party data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rsvp-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      resetPartyCode: resetPartyCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Let us know if you can come!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), !partyCode && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePartyCodeSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputPartyCode,\n        onChange: event => setInputPartyCode(event.target.value),\n        placeholder: \"Enter your party code\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"RSVP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), invalidCodeError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: invalidCodeError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), partyFetched && party && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [party.photos && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"party-image-container\",\n        children: party.photos.map((photo, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: photo,\n          alt: `Party photo ${index + 1}`,\n          className: \"party-images\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this), party.note && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guest-note-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: generateGreeting(party.members)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"party-note\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: party.note\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Love,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ryan and Brenna\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }, this), party.members && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"guest-list\",\n          children: party.members.map((member, index) => {\n            const fullName = `${member.firstname} ${member.lastname}`;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"guest-card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"guest-card-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: guestImages[index % guestImages.length],\n                  alt: \"Guest illustration\",\n                  className: \"guest-card-image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"guest-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: `${member.firstname} ${member.lastname}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 32\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chip-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: `chip ${memberRSVPs[fullName] === \"yes\" ? \"active\" : \"\"}`,\n                      onClick: () => handleRSVPChange(fullName, \"yes\"),\n                      children: \"Will be attending\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: `chip ${memberRSVPs[fullName] === \"no\" ? \"active\" : \"\"}`,\n                      onClick: () => handleRSVPChange(fullName, \"no\"),\n                      children: \"Sadly cannot attend\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 27\n                  }, this), memberRSVPs[fullName] === \"yes\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"allergy-container\",\n                    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      id: `${fullName}-allergies`,\n                      className: \"input-textarea\",\n                      value: memberAllergies[fullName],\n                      onChange: e => handleAllergyChange(fullName, e.target.value),\n                      placeholder: memberAllergies[fullName] === \"\" ? \"Please let us know about any dietary restrictions\" : \"\",\n                      rows: \"3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 23\n              }, this)\n            }, fullName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), atLeastOneRSVP && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-bar\",\n        children: [showSuccess && successMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Guests Attending: \", attendingCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 19\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message-bar\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRSVP,\n          disabled: isLoading,\n          children: isLoading ? \"Submitting...\" : rsvpSubmitted ? \"Update RSVP\" : \"Submit RSVP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n}\n_s(RSVP, \"vG1yASGlr6u63WeC+HpTciveF40=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RSVP;\nexport default RSVP;\nvar _c;\n$RefreshReg$(_c, \"RSVP\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","RSVP","_s","partyCode","navigate","party","setParty","partyFetched","setPartyFetched","isLoading","setIsLoading","showSuccess","setShowSuccess","successMessage","setSuccessMessage","errorMessage","setErrorMessage","attendingCount","setAttendingCount","rsvpSubmitted","setRsvpSubmitted","invalidCodeError","setInvalidCodeError","memberRSVPs","setMemberRSVPs","memberAllergies","setMemberAllergies","inputPartyCode","setInputPartyCode","resetPartyCode","guestImages","fetchPartyData","response","fetch","ok","data","json","foundPartyKey","Object","keys","find","partyCodeKey","toLowerCase","foundParty","initialRSVPs","initialAllergies","rsvpAlreadySubmitted","initialCount","members","forEach","member","fullName","firstname","lastname","rsvp","allergies","calculateSuccessMessage","allNoRSVPs","values","every","console","error","generateGreeting","firstNames","map","length","guestList","slice","join","lastGuest","handleRSVPChange","newRsvpStatus","prevCount","isCurrentlyYes","Math","max","prevRSVPs","handleAllergyChange","newAllergies","prevAllergies","handleRSVP","allRSVPsSelected","method","headers","body","JSON","stringify","code","alert","rsvpData","attendingGuests","filter","guestName","attendingFirstNames","split","atLeastOneRSVP","some","handlePartyCodeSubmit","event","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","photos","photo","index","src","alt","note","onClick","id","e","rows","disabled","_c","$RefreshReg$"],"sources":["/Users/brenna.sorkin/Documents/GitHub/ryanandbren/src/RSVP.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport \"./RSVP.css\";\nimport Navbar from './Navbar'; // Import Navbar\n\n\nfunction RSVP() {\n  const { partyCode } = useParams();\n  const navigate = useNavigate();\n  const [party, setParty] = useState(null);\n  const [partyFetched, setPartyFetched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [attendingCount, setAttendingCount] = useState(0);\n  const [rsvpSubmitted, setRsvpSubmitted] = useState(false);\n  const [invalidCodeError, setInvalidCodeError] = useState(\"\"); // Error message for invalid code\n\n\n  const [memberRSVPs, setMemberRSVPs] = useState({});\n  const [memberAllergies, setMemberAllergies] = useState({});\n  const [inputPartyCode, setInputPartyCode] = useState(partyCode || \"\");\n\n    // Reset partyCode to an empty string\n  const resetPartyCode = () => {\n    setInputPartyCode(\"\"); // Clear partyCode when the RSVP link is clicked\n  };\n\n  const guestImages = [\n    '/guest-ill1.png', \n    '/guest-ill2.png',\n    '/guest-ill3.png',\n    '/guest-ill4.png',\n  ];\n\n  useEffect(() => {\n    if (partyCode) {\n      const fetchPartyData = async () => {\n        try {\n          const response = await fetch(\"http://localhost:5001/partyData\");\n          if (response.ok) {\n            const data = await response.json();\n\n            const foundPartyKey = Object.keys(data).find(\n              (partyCodeKey) => partyCodeKey.toLowerCase() === partyCode.toLowerCase()\n            );\n\n            if (foundPartyKey) {\n              const foundParty = data[foundPartyKey];\n              setParty(foundParty);\n              setPartyFetched(true);\n\n              const initialRSVPs = {};\n              const initialAllergies = {};\n              let rsvpAlreadySubmitted = false;\n              let initialCount = 0;\n\n              foundParty.members.forEach((member) => {\n                const fullName = `${member.firstname} ${member.lastname}`;\n                initialRSVPs[fullName] = member.rsvp ? member.rsvp : null;\n\n                if (member.rsvp === \"yes\") {\n                  initialCount += 1;\n                  rsvpAlreadySubmitted = true;\n                }\n\n                initialAllergies[fullName] = member.allergies || \"\";\n              });\n\n              setAttendingCount(initialCount);\n\n              if (rsvpAlreadySubmitted) {\n                setRsvpSubmitted(true);\n                setShowSuccess(true);\n                calculateSuccessMessage(initialRSVPs);\n              } else {\n                const allNoRSVPs = Object.values(initialRSVPs).every((rsvp) => rsvp === \"no\");\n                if (allNoRSVPs) {\n                  setRsvpSubmitted(true);\n                  setShowSuccess(true);\n                  setSuccessMessage(\"We'll miss you, but hope to see you soon!\");\n                }\n              }\n\n              setMemberRSVPs(initialRSVPs);\n              setMemberAllergies(initialAllergies);\n            } else {\n              setInvalidCodeError(\"Invalid party code. Check your email for your code, or let Ryan and Brenna know if you're having trouble finding it!\");\n            }\n          } else {\n            console.error(\"Error fetching party data\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching party data:\", error);\n        }\n      };\n\n      fetchPartyData();\n    }\n  }, [partyCode]);\n\n  // Define the generateGreeting function here\n  const generateGreeting = (members) => {\n    const firstNames = members.map(member => member.firstname);\n    \n    if (firstNames.length === 1) {\n      return `Dear ${firstNames[0]},`;\n    } else if (firstNames.length === 2) {\n      return `Dear ${firstNames[0]} and ${firstNames[1]},`;\n    } else {\n      const guestList = firstNames.slice(0, -1).join(\", \");\n      const lastGuest = firstNames[firstNames.length - 1];\n      return `Dear ${guestList}, and ${lastGuest},`;\n    }\n  };\n\n  // Handle RSVP status changes\n  const handleRSVPChange = (fullName, newRsvpStatus) => {\n    setShowSuccess(false);\n    setErrorMessage(\"\");\n\n    setAttendingCount((prevCount) => {\n      const isCurrentlyYes = memberRSVPs[fullName] === \"yes\";\n      if (newRsvpStatus === \"yes\" && !isCurrentlyYes) {\n        return prevCount + 1;\n      }\n      if (newRsvpStatus === \"no\" && isCurrentlyYes) {\n        return Math.max(prevCount - 1, 0);\n      }\n      return prevCount;\n    });\n\n    setMemberRSVPs((prevRSVPs) => ({\n      ...prevRSVPs,\n      [fullName]: newRsvpStatus,\n    }));\n  };\n\n  // Handle allergy changes\n  const handleAllergyChange = (fullName, newAllergies) => {\n    setShowSuccess(false);\n    setMemberAllergies((prevAllergies) => ({\n      ...prevAllergies,\n      [fullName]: newAllergies,\n    }));\n  };\n\n  // Handle form submission to submit the RSVP data\n  const handleRSVP = async () => {\n    const allRSVPsSelected = Object.values(memberRSVPs).every(\n      (rsvp) => rsvp !== null\n    );\n\n    if (!allRSVPsSelected) {\n      setErrorMessage(\"Please choose an RSVP status for all guests.\");\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5001/rsvp\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ code: partyCode, memberRSVPs, memberAllergies }),\n      });\n\n      if (response.ok) {\n        setShowSuccess(true);\n        setRsvpSubmitted(true);\n        calculateSuccessMessage(memberRSVPs);\n      } else {\n        const data = await response.json();\n        console.error(\"RSVP failed:\", data.error);\n        alert(\"RSVP failed. Please try again later.\");\n      }\n    } catch (error) {\n      console.error(\"Error sending RSVP:\", error);\n      alert(\"An error occurred. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const calculateSuccessMessage = (rsvpData) => {\n    const attendingGuests = Object.keys(rsvpData).filter(\n      (guestName) => rsvpData[guestName] === \"yes\"\n    );\n\n    const attendingFirstNames = attendingGuests.map((fullName) => {\n      return fullName.split(\" \")[0];\n    });\n\n    if (attendingFirstNames.length === 0) {\n      setSuccessMessage(\"We'll miss you, but hope to see you soon!\");\n    } else if (attendingFirstNames.length === 1) {\n      setSuccessMessage(`We can't wait to celebrate with you, ${attendingFirstNames[0]}!`);\n    } else {\n      const guestList = attendingFirstNames.slice(0, -1).join(\", \");\n      const lastGuest = attendingFirstNames[attendingFirstNames.length - 1];\n      setSuccessMessage(`We can't wait to celebrate with you, ${guestList} and ${lastGuest}!`);\n    }\n  };\n\n  const atLeastOneRSVP = Object.values(memberRSVPs).some((rsvp) => rsvp !== null);\n\n  // Submit party code and check for validity without navigating\n  const handlePartyCodeSubmit = async (event) => {\n    event.preventDefault();\n    if (!inputPartyCode) return;\n\n    try {\n      const response = await fetch(\"http://localhost:5001/partyData\");\n      if (response.ok) {\n        const data = await response.json();\n\n        const foundPartyKey = Object.keys(data).find(\n          (partyCodeKey) => partyCodeKey.toLowerCase() === inputPartyCode.toLowerCase()\n        );\n\n        if (foundPartyKey) {\n          navigate(`/rsvp/${inputPartyCode}`); // Navigate if the code is valid\n        } else {\n          setInvalidCodeError(\"Invalid party code. Check your email for your code, or let Ryan and Brenna know if you're having trouble finding it!\");\n        }\n      } else {\n        console.error(\"Error fetching party data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching party data:\", error);\n    }\n  };\n\n  return (\n    <div className=\"rsvp-container\">\n     <Navbar resetPartyCode={resetPartyCode} /> \n      <h1>Let us know if you can come!</h1>\n\n      {/* If no party code is provided, show the party code input */}\n      {!partyCode && (\n        <form onSubmit={handlePartyCodeSubmit}>\n          <input\n            type=\"text\"\n            value={inputPartyCode}\n            onChange={(event) => setInputPartyCode(event.target.value)}\n            placeholder=\"Enter your party code\"\n            className=\"input-field\"\n          />\n          <button type=\"submit\">RSVP</button>\n          {invalidCodeError && <p className=\"error-message\">{invalidCodeError}</p>}\n        </form>\n      )}\n\n      {partyFetched && party && (\n        <div>\n         \n\n          {party.photos && (\n            <div className=\"party-image-container\">\n              {party.photos.map((photo, index) => (\n                <img\n                  key={index}\n                  src={photo}\n                  alt={`Party photo ${index + 1}`}\n                  className=\"party-images\"\n                />\n              ))}\n            </div>\n          )}\n\n          {party.note && (\n            <div className=\"guest-note-card\">\n              <p>{generateGreeting(party.members)}</p>\n              <div className=\"party-note\">\n                <p>{party.note}</p>\n              </div>\n              <p>Love,</p>\n              <p>Ryan and Brenna</p>\n            </div>\n          )}\n\n          {party.members && (\n            <>\n              <ul className=\"guest-list\">\n                {party.members.map((member, index) => {\n                  const fullName = `${member.firstname} ${member.lastname}`;\n                  return (\n                    <li key={fullName} className=\"guest-card\">\n                      <div className=\"guest-card-content\">\n                        <img\n                          src={guestImages[index % guestImages.length]}\n                          alt=\"Guest illustration\"\n                          className=\"guest-card-image\"\n                        />\n                        <div className=\"guest-details\">\n                          <div><strong>{`${member.firstname} ${member.lastname}`}</strong></div>\n                          <div className=\"chip-container\">\n                            <button\n                              className={`chip ${memberRSVPs[fullName] === \"yes\" ? \"active\" : \"\"}`}\n                              onClick={() => handleRSVPChange(fullName, \"yes\")}\n                            >\n                              Will be attending\n                            </button>\n                            <button\n                              className={`chip ${memberRSVPs[fullName] === \"no\" ? \"active\" : \"\"}`}\n                              onClick={() => handleRSVPChange(fullName, \"no\")}\n                            >\n                              Sadly cannot attend\n                            </button>\n                          </div>\n\n                          {memberRSVPs[fullName] === \"yes\" && (\n                            <div className=\"allergy-container\">\n                              <textarea\n                                id={`${fullName}-allergies`}\n                                className=\"input-textarea\"\n                                value={memberAllergies[fullName]}\n                                onChange={(e) => handleAllergyChange(fullName, e.target.value)}\n                                placeholder={\n                                  memberAllergies[fullName] === \"\"\n                                    ? \"Please let us know about any dietary restrictions\"\n                                    : \"\"\n                                }\n                                rows=\"3\"\n                              />\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </li>\n                  );\n                })}\n              </ul>\n            </>\n          )}\n\n          {atLeastOneRSVP && (\n            <div className=\"bottom-bar\">\n              {showSuccess && successMessage ? (\n                <p>{successMessage}</p>\n              ) : (\n                <>\n                  <p>Guests Attending: {attendingCount}</p>\n                  {errorMessage && <p className=\"error-message-bar\">{errorMessage}</p>}\n                </>\n              )}\n              <button onClick={handleRSVP} disabled={isLoading}>\n                {isLoading ? \"Submitting...\" : rsvpSubmitted ? \"Update RSVP\" : \"Submit RSVP\"}\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default RSVP;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}